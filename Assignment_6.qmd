---
title: "Assignment_4"
format: gfm
editor: visual
engine: knitr 
---

## **Exercise 1. Tibble and Data Import**

Import the data frames listed below into R and [parse](https://r4ds.had.co.nz/data-import.html#parsing-a-vector) the columns appropriately when needed. Watch out for the formatting oddities of each dataset. Print the results directly, **without** using `kable()`.

**You only need to finish any three out of the five questions in this exercise in order to get credit.**

#### **1.1 Create the following tibble manually, first using `tribble()` and then using `tibble()`. Print both results. \[We didn’t have time to cover this in class, but look up how these functions work [here](https://r4ds.had.co.nz/tibbles.html#creating-tibbles)\]**

```{r}
library(tidyverse)
library(knitr)


tribble(
  ~a, ~b, ~c,
  #--#--#---
  1, 2.1, "apple",
  2, 3.2, "orange"
) |> 
  print()

## # A tibble: 2 × 3
##       a     b c     
##   <dbl> <dbl> <chr> 
## 1     1   2.1 apple 
## 2     2   3.2 orange


tibble(
  a = 1, 2,
  b = 2.1, 3.2,
  c = "apple", "orange"
) |> 
  print()
## # A tibble: 2 × 3
##       a     b c     
##   <int> <dbl> <chr> 
## 1     1   2.1 apple 
## 2     2   3.2 orange

```

#### **1.2 Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset2.txt` into R. Change the column names into “Name”, “Weight”, “Price”.**

```{r}
#| echo: false

dataset2 <- read_csv("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset2.txt", col_names = FALSE)

dataset2 |> 
  rename(
    Name = X1,
    Weight = X2,
    Price = X3
  ) |> 
  print()

```

#### **1.3 Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset3.txt` into R. Watch out for the first few lines, missing values, separators, quotation marks, and deliminaters.**

```{r}
#| echo: false
read_delim(
  "https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset3.txt",
  skip = 2, 
  col_names = TRUE,
  na = c("?", "Not Available"),
  escape_backslash = TRUE
  ) |> 
  print()
```

#### **1.4 Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset4.txt` into R. Watch out for comments, units, and decimal marks (which are `,` in this case).**

```{r}
clean_data <- read_delim(
  "https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset4.txt",
  locale = locale(decimal_mark = ","),
  comment = "/"
  ) 

cleaner_data <- clean_data |> 
  mutate(
    Weight = str_remove_all(Weight, "kg"),
    Price = str_remove_all(Price, "€")
  ) 

cleaner_data



```

## **Exercise 2. Weather station**

his dataset contains the weather and air quality data collected by a weather station in Taiwan. It was obtained from the Environmental Protection Administration, Executive Yuan, R.O.C. (Taiwan).

#### **2.1 Variable descriptions**

-   The text file `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station_notes.txt` contains descriptions of different variables collected by the station.

-   Import it into R and print it in a table as shown below with `kable()`.

```{r}
read_delim(
  "https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station_notes.txt",
  delim = "-") |> 
  kable()


```

#### **2.2 Data tidying**

-   Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station.csv` into R. As you can see, this dataset is a classic example of untidy data: values of a variable (i.e. hour of the day) are stored as column names; variable names are stored in the `item` column.

-   Clean this dataset up and restructure it into a tidy format.

-   Parse the `date` variable into date format and parse `hour` into time.

-   Turn all invalid values into `NA` and turn `NR` in rainfall into `0`.

-   Parse all values into numbers.

-   Show the first 6 rows and 10 columns of this cleaned dataset, as shown below, *without* using `kable()`.

*Hints: you don’t have to perform these tasks in the given order; also, warning messages are not necessarily signs of trouble.*

```{r}
weather <- read_delim(
  "https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station.csv",
  col_names = c("date", "station", "item", "AMB_TEMP", "CO", "NO", "NO2", "NOx", "O3", "PM10", "PM2", "RAINFALL", "RH", "SO2", "WD_HR", "WIND_DIREC", "WIND_SPEED", "WS_HR")
) 

weather_column <- weather |> 
  select(-item) |> 
  slice(-1)
  

print(weather_column)


```
